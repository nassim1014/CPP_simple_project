# Ignore compiled executables
*.exe

# Ignore any build directories (if you have them)
/build/
/debug/
/release/

# Ignore IDE-specific files (optional, depending on your setup)
.vscode/
.idea/

# Ignore any temporary files
*.tmp

# Node.js / Electron
node_modules/
npm-debug.log
yarn-debug.log
yarn-error.log

# Electron build output
dist/
out/

# C++ build artifacts
*.o
*.obj
*.exe
*.dll
*.so
*.dylib

# Visual Studio Code
.vscode/

# JetBrains IDEs
.idea/

# macOS
.DS_Store

# Windows
Thumbs.db

# Build directories
build/
Release/
Debug/

# Logs
logs/
*.log

# Environment variables
.env

# Temporary files
*.tmp
*.temp

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env.local
.env.development.local
.env.test.local
.env.production.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist/

# Gatsby files
.cache/
public

# VuePress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# C++ specific
# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app
